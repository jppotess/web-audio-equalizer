{"version":3,"sources":["audioContext.js","view.js"],"names":[],"mappings":"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","file":"scripts.min.js","sourcesContent":["// audio Context\n\n// audio context w/ fallbacks\nvar audioContext = new (window.AudioContext || window.webkitAudioContext)();\nvar source;\nvar analyser = audioContext.createAnalyser();\nvar canvasEQ = document.querySelector(\"canvas#eq\");\nvar canvas = canvasEQ.getContext(\"2d\");\nvar play = document.querySelector(\"button.play\");\nvar stop = document.querySelector(\"button.stop\");\n\n// request animation fallbacks\nwindow.requestAnimationFrame = (function(){\nreturn window.requestAnimationFrame  ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame    ||\n  window.oRequestAnimationFrame      ||\n  window.msRequestAnimationFrame     ||\n  function(callback){\n  window.setTimeout(callback, 1000 / 60);\n};\n})();\n\n// Load the audio data\nfunction getData() {\n  source = audioContext.createBufferSource();\n\n  var request = new XMLHttpRequest();\n\n  request.open('GET', '../vendor/music/home.m4a', true)\n  request.responseType = 'arraybuffer';\n\n  request.onload = function() {\n\n    var audioData = request.response;\n\n    audioContext.decodeAudioData(audioData, function(buffer) {\n      source.buffer = buffer;\n\n      source.connect(analyser);\n\n      // get data\n      // var freqDomain = new Float32Array(analyser.frequencyBinCount);\n      // analyser.getFloatFrequencyData(freqDomain);\n\n      //  frequency domain\n      var delay = 5;\n      var delayCount = 0;\n\n\n      // objectname.canvas.width= this.WIDTH *** replace\n      // ovjectname.canvas.height = this.HEIGHT *** replace\n      var times = new Uint8Array(analyser.frequencyBinCount);\n\n\n\n        if(delayCount == 0 || delayCount == delay) {\n          analyser.getByteFrequencyData(times);\n\n          for (var i = 0; i < times.length; i++) {\n            console.log(\"tl \" + times.length);\n            console.log(\"times \" + times[i]);\n            var value = times[i];\n            var percent = value / 256;\n            var height = 400 * percent;\n            var offset = 400 - height - 1;\n            var barWidth = 600/analyser.frequencyBinCount;\n            var hue = i/analyser.frequencyBinCount * 360;\n            canvas.fillStyle = 'hsl(' + hue + ', 100%, 50%)';\n            canvas.fillRect(i * barWidth, offset, barWidth, height);\n          }\n          delayCount = 1;\n        } else {\n          delayCount++;\n        }\n\n      // // time domain\n      // var timeDomain = new Uint8Array(analyser.frequencyBinCount);\n      // analyser.getByteTimeDomainData(freqDomain);\n      // for (var i = 0; i < analyser.frequencyBinCount; i++) {\n      //   var value = timeDomain[i];\n      //   var percent = value / 256;\n      //   var height = 400 * percent;\n      //   var offset = 400 - height - 1;\n      //   var barWidth = 600/analyser.frequencyBinCount;\n      //   canvas.fillStyle = 'black';\n      //   canvas.fillRect(i * barWidth, offset, 1, 1);\n      // }\n\n      function getFrequencyValue(frequency) {\n        var nyquist = context.sampleRate/2;\n        let index = Math.round(frequency/nyquist * freqDomain.length);\n      }\n\n\n\n\n      analyser.connect(audioContext.destination);\n      source.loop = true;\n    },function(e){\"Error with decoding audio data: \" + e.err});\n\n  }\n  request.send();\n}\n\n\n\n\n\n// Set Play and Pause(Stop) buttons\n\nplay.onclick = function() {\n  getData();\n  source.start(0);\n  play.setAttribute('disabled', 'disabled');\n}\n\nstop.onclick = function() {\n  source.stop(0);\n  play.removeAttribute('disabled');\n}\n\n","window.Vue = Vue;\n\nnew Vue ({\n  el: '#app',\n  data: {\n    message: 'world'\n  }\n})"],"sourceRoot":"/source/"}